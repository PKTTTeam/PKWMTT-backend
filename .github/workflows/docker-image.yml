name: Docker CI and Image Build (MySQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# 1) Allow pushing to GHCR
permissions:
  contents: read
  packages: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.9.4-eclipse-temurin-21
      options: --user root

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            echo "Checking MySQL connection..."
            mysql -h 127.0.0.1 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "SELECT 1;" ${{ secrets.MYSQL_DATABASE }} && break
            sleep 3
          done
          echo "MySQL is up!"

      - name: Run tests and package
        run: mvn clean verify
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: target/surefire-reports/

      - name: Upload built JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

