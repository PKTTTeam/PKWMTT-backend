name: Docker CI and Image Build (MySQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# 1) Allow pushing to GHCR
permissions:
  contents: read
  packages: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.9.4-eclipse-temurin-21
      options: --user root

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${secrets.MYSQL_DATABASE}
          MYSQL_USER: ${secrets.MYSQL_USER}
          MYSQL_PASSWORD: ${secrets.MYSQL_PASSWORD}
          MYSQL_ROOT_PASSWORD: ${secrets.MYSQL_ROOT_PASSWORD}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u ${ secrets.MYSQL_USER } -p ${ secrets.MYSQL_PASSWORD }"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Install dependent libraries
        run: apt-get install mysql-server

      - name: Run tests and package
        run: mvn clean verify -DskipDocker
          
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: target/surefire-reports/

      - name: Upload built JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  docker-build:
    needs: test
    runs-on: ubuntu-latest
  
    permissions:
      contents: read
      packages: write
  
    steps:
      - uses: actions/checkout@v4
  
      - name: Log into GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          install: true
  
      - name: Lowercase repository slug
        run: |
          echo "IMAGE_REPO=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" \
            >> $GITHUB_ENV
  
      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_REPO }}:latest
            ghcr.io/${{ env.IMAGE_REPO }}:${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
